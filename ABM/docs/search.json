[
  {
    "objectID": "posts/Gaussian-LM/index.html",
    "href": "posts/Gaussian-LM/index.html",
    "title": "GLMs Gaussianos",
    "section": "",
    "text": "Este post presenta un análisis la base mtcars usando un modelo lineal múltiple con verosimilitud Gaussiana.\nLa base de datos mtcars contiene el registro de motores de carros mas populares en USA, 1974. los datos contienen 32 registros, con 10 atributos del motor.\nSe desea predecir la capacidad de consumo de los motores, para eso se evaluaron las siguiente variables."
  },
  {
    "objectID": "posts/Gaussian-LM/index.html#verosimilitud",
    "href": "posts/Gaussian-LM/index.html#verosimilitud",
    "title": "GLMs Gaussianos",
    "section": "Verosimilitud",
    "text": "Verosimilitud\nPara medir la relación de consumo de los motores utilizaremos un GLM normal tal que:\nmpg_i \\sim N(\\mu_i,\\sigma^2), \\quad  g(\\mu_i) = \\mu_i, \\text{ y } \\mu_i = \\beta X_i.\nEl siguiente código limpia la base de datos para obtener las variables de interés\n\n\nCode\ndf = mtcars[,c(1,4,6,8,10,11)]\nstr(df)\n\n\n'data.frame':   32 obs. of  6 variables:\n $ mpg : num  21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ...\n $ hp  : num  110 110 93 110 175 105 245 62 95 123 ...\n $ wt  : num  2.62 2.88 2.32 3.21 3.44 ...\n $ vs  : num  0 0 1 1 0 1 0 1 1 1 ...\n $ gear: num  4 4 4 3 3 3 3 4 4 4 ...\n $ carb: num  4 4 1 1 2 1 4 2 2 4 ...\n\n\nTodas las variables son numéricas, pero algunas son totalmente enteras, dificultando el proceso de análisis, se procede a revisar las correlaciones para revisar las interacciones lineales entre variables.\n\n\nCode\nggpairs(df)\n\n\n\n\n\nFigure 1: Gráfico de pares. La diagonal principal muestra histogramas densidades de cada una de las variables. La parte superior muestra el coeficiente de correlación entre dos variables, fila y columna. La parte inferior muestra un gráfico de dispersión entre dos variables.\n\n\n\n\nFigure 1 muestra colinealidad entre las variables mpg, hp y wt. Por lo tanto, múltiples modelos deben ser considerados. Realizemos un modelo inicial, el considerado el modelo completo que posee todas las variables\n\n\n\n\n\n\nColinealidad\n\n\n\nDos covariables X_1 y X_2 se dicen ser colineales si las variables son linealmente dependientes.\nRecordar que si dos columnas de una matriz son linealmente dependiente, entonces el determinante es cero."
  },
  {
    "objectID": "posts/Gaussian-LM/index.html#ajuste-del-modelo",
    "href": "posts/Gaussian-LM/index.html#ajuste-del-modelo",
    "title": "GLMs Gaussianos",
    "section": "Ajuste del modelo",
    "text": "Ajuste del modelo\nAjustamos el modelo completo que consiste en usar todas las variables, y revisamos el ajuste e inferencia de los parámetros.\n\n\nCode\nm1 = lm(mpg~.,data = df)\nsummary(m1)\n\n\n\nCall:\nlm(formula = mpg ~ ., data = df)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.2884 -1.4370 -0.3155  1.1697  5.8246 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 27.20311    5.74212   4.737 6.72e-05 ***\nhp          -0.02339    0.01353  -1.728   0.0958 .  \nwt          -2.74663    0.92005  -2.985   0.0061 ** \nvs           0.94692    1.36929   0.692   0.4954    \ngear         1.78520    1.12762   1.583   0.1255    \ncarb        -0.65498    0.57767  -1.134   0.2672    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.569 on 26 degrees of freedom\nMultiple R-squared:  0.8477,    Adjusted R-squared:  0.8184 \nF-statistic: 28.94 on 5 and 26 DF,  p-value: 7.653e-10\n\n\nDebido a la alta colinealidad entre las variables, pocos parámetros estimados son significativos. Procedemos a eliminar algunas variables del modelo. Eliminamos la variable wt al ser colineal con múltiples variables. Por lo tanto, el modelo inicial M_1 es:\n\n\nCode\nm1  =  lm(mpg~vs+hp+gear+carb,data = df)\nsummary(m1)\n\n\n\nCall:\nlm(formula = mpg ~ vs + hp + gear + carb, data = df)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.8047 -2.3487 -0.0967  1.9188  6.7859 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 13.03756    3.67694   3.546  0.00145 ** \nvs           0.84671    1.55657   0.544  0.59093    \nhp          -0.03449    0.01480  -2.331  0.02747 *  \ngear         4.20129    0.89285   4.705 6.72e-05 ***\ncarb        -1.33338    0.60391  -2.208  0.03593 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.921 on 27 degrees of freedom\nMultiple R-squared:  0.7955,    Adjusted R-squared:  0.7652 \nF-statistic: 26.25 on 4 and 27 DF,  p-value: 5.825e-09"
  },
  {
    "objectID": "posts/Gaussian-LM/index.html#incertidumbre-de-los-estimadores.",
    "href": "posts/Gaussian-LM/index.html#incertidumbre-de-los-estimadores.",
    "title": "GLMs Gaussianos",
    "section": "Incertidumbre de los estimadores.",
    "text": "Incertidumbre de los estimadores.\nPese que la función lm de R realiza un análisis de incertidumbre al presentar una Prueba-t de significacia para cada parámetro \\beta_i, no presenta los intervalos de confianza. Estos serán estimados con Bootstrap. La siguiente función obtiene una muestra Bootstrap de los parámetros desconocidos \\beta.\n\n\nCode\nlm_boots = function(y,x,B = 1000){\n  n = length(y)\n  est = NULL\n  for (i in 1:B) {\n    si = sample(x = 1:n,size = n,replace = TRUE)\n    mli = lm(y[si]~x[si,] )\n    ci = as.array(mli$coefficients)\n    est = rbind(est,ci)\n  }\n  # Estética\n  cn = colnames(x)\n  colnames(est) = c(\"intercepto\",cn)\n  \n  return(est)\n}\n\n\nObtenemos una muestra Bootstrap para los estimadores \\hat \\beta de tamaño B=5,000 repeticiones\n\n\nCode\nbtp = lm_boots(y = df$mpg,x = as.matrix(df[,-1]),B = 5000)\n\nbayesplot_theme_set(theme_grey())\nmcmc_dens(btp)+labs(title=\"Distribución muestral de los estimadores\",\n                    subtitle =\"Bootstrap B = 5,000 iteraciones\")\n\n\n\n\n\nFigure 2: Gráfico de densidades. Cada densidad representa la distribución muestral aproximada para cada uno de los estimadores usando un Bootstrap de B=5,000 iteraciones.\n\n\n\n\nLos intervalos de confianza al 95% son:\n\n\nCode\nx = apply(btp,MARGIN = 2, FUN = quantile, probs = c(0.025,0.5,0.975)) \n\n# Estética\nx = data.frame( t(x) )\nx$pars = c(\"intercepto\",\"hp\",\"wt\",\"vs\",\"gear\",\"carb\")\ncolnames(x) = c(\"q2.5%\",\"Median\",\"q97.5%\",\"parámetros\")\n\nft = flextable(x[c(4,1,2,3)])\nautofit(ft)\n\n\n\n\nTable 1:  Intervalos de confianza al 95%, obtenidos a partir de una muestra bootstrap de B = 5,000 iteraciones parámetrosq2.5%Medianq97.5%intercepto13.0948574726.9816567637.8044761701hp-0.04638349-0.024179220.0005345932wt-4.64438552-2.65093414-0.9609469280vs-1.961333580.739204583.1326654818gear0.172493911.834463445.0634066576carb-2.27250051-0.723657750.2772406479\n\n\n\nLos intervalos de confianza revelan mayor información a lo obtenido por la prueba-t, parámetros como hp, y carb que son significativos en la prueba, no lo son mediante los intervalos. Esto indica la posibilidad de un modelo mucho mas reducido."
  },
  {
    "objectID": "posts/Gaussian-LM/index.html#análisis-de-los-residuos",
    "href": "posts/Gaussian-LM/index.html#análisis-de-los-residuos",
    "title": "GLMs Gaussianos",
    "section": "Análisis de los residuos",
    "text": "Análisis de los residuos\nUna vez evaluadas las estimaciones del modelo, es necesario revisar los residuos del mismo para corroborar supuestos, la siguiente linea de código presenta un resumen descriptivo de los residuos del modelo inicial M_1, en su mayoría parecen estar centrados en cero.\n\n\nCode\nsummary(m1$residuals)\n\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-3.80470 -2.34875 -0.09674  0.00000  1.91880  6.78592 \n\n\nFigure 3 presenta una visualización típica para el diagnostico de los residuos, ninguna figura debe presentar un comportamiento polinómico a excepción del gráfico de quantiles (derecha superior), que debe seguir el comportamiento de una función lineal creciente.\n\n\nCode\nautoplot(m1)\n\n\n\n\n\nFigure 3: Gráfico diagnóstico de los residuos, estos cuatro gráficos evaluan el ajuste y supuestos del modelo, si algún comportamiento polinómico es persistente, entonces los supuestos del modelo no se satisfacen."
  },
  {
    "objectID": "posts/Gaussian-LM/index.html#selección-de-modelos",
    "href": "posts/Gaussian-LM/index.html#selección-de-modelos",
    "title": "GLMs Gaussianos",
    "section": "Selección de modelos",
    "text": "Selección de modelos\nAdicional al modelo M_1, ajustamos dos modelos mas:\nM_2: \\quad mpg \\sim N(hp+gear+carb,\\sigma^2), M_3: \\quad mpg \\sim N(wt+gear+carb,\\sigma^2).\n\n\nCode\nm2 = lm(mpg~hp+gear+carb,data = df)\nm3 = lm(mpg~wt+gear+carb,data = df)\n\n\nEl siguiente código calcula el RMSE de un modelo linea en el conjunto de entrenamiento.\n\n\nCode\nrmse = function(m){\n  mse = sum(m$residuals^2)/length(m$residuals)\n  return(sqrt(mse))\n}\n\n\n\n\nCode\nx = matrix(0,nrow = 4,ncol = 3)\nx[1,] = c(logLik(m1),logLik(m2),logLik(m3))\nx[2,] = c(AIC(m1),AIC(m2),AIC(m3))\nx[3,] = c(BIC(m1),BIC(m2),BIC(m3))\nx[4,] = c(rmse(m1),rmse(m2),rmse(m3))\n\n# Estética\nx = data.frame(x)\nx$pars =  c(\"logLik\",\"AIC\",\"BIC\",\"RMSE\")\ncolnames(x)  = c(\"Modelo 1\",\"Modelo 2\",\"Modelo 3\",\"Criterio\")\n\nft = flextable(x[c(4,1,2,3)])\nautofit(ft)\n\n\n\n\nTable 2:  Criterios de información de los modelos. Se selecciona el modelo con menores criterios. CriterioModelo 1Modelo 2Modelo 3logLik-76.986353-77.160742-75.196419AIC165.972706164.321484160.392838BIC174.767122171.650163167.721517RMSE2.6828642.6975252.536917\n\n\n\nTable 2 muestra la tabla de criterios de información para el conjunto de datos mtcars para sorpresa del lector el mejor modelo es el alternativo M_3 que usa la variable colineal wt en vez de hp."
  },
  {
    "objectID": "posts/Gaussian-LM/index.html#validación-cruzada",
    "href": "posts/Gaussian-LM/index.html#validación-cruzada",
    "title": "GLMs Gaussianos",
    "section": "Validación cruzada",
    "text": "Validación cruzada\nEl siguiente código presenta una función para realizar k-fold-CV para cualquier valor de k. En caso de querer añadir otros modelos o criterios, la función deberá ser modificada.\n\n\nCode\nkfold = function(df,k){\n  # Generar la particion\n  kfld = createFolds(df[,1],k = k)\n  mat = NULL\n  \n  for (i in 1:k) {\n    # separar los datos en conjuntos de prueba y entrenamiento\n    dfE= df[-kfld[[i]],]\n    dfP = df[kfld[[i]],]\n    # Ajustar los modelos\n    m1 = lm(mpg~vs+hp+gear+carb,data = dfE)\n    m2 = lm(mpg~hp+gear+carb,data = dfE)\n    m3 = lm(mpg~wt+gear+carb,data = dfE)\n    \n    p1 = predict(m1,dfP)\n    p2 = predict(m2,dfP)\n    p3 = predict(m3,dfP)\n    # Calcular AIC y RMSE\n    aic = c(\n            AIC(m1),\n            AIC(m2),\n            AIC(m3)\n            )\n    rmse = c(\n             RMSE(pred =  p1,obs = dfP[,1]),\n             RMSE(pred =  p2,obs = dfP[,1]),\n             RMSE(pred =  p3,obs = dfP[,1])\n             )\n    mae = c(\n            MAE(pred =  p1,obs = dfP[,1]),\n            MAE(pred =  p2,obs = dfP[,1]),\n            MAE(pred =  p3,obs = dfP[,1])\n            )\n    mape = c(\n              mean(abs((p1-dfP[,1])/dfP[,1])),\n              mean(abs((p2-dfP[,1])/dfP[,1])),\n              mean(abs((p3-dfP[,1])/dfP[,1]))\n              )\n    # Unir los datos\n    mat = rbind(mat,c(aic,rmse,mae,mape)) \n  }\n  colnames(mat) = c(\"AIC1\",\"AIC2\",\"AIC3\",\"RMSE1\",\"RMSE2\",\"RMSE3\",\"MAE1\",\"MAE2\",\n                    \"MAE3\",\"MAPE1\",\"MAPE2\",\"MAPE3\")\n  row.names(mat) = NULL\n  return(mat)\n}\n\n\nTable 3 presenta los resultados obtenidos al realizar 5-fold-cv, bajo todos los criterios presentados, el modelo M_3 presenta las mejores predicciones. Por lo tanto, M_3 es el modelo con Mayor aprendizaje.\n\n\nCode\nrst = kfold(df = df,k = 5)\nx = t(apply(rst,MARGIN = 2,FUN = \"quantile\",probs = c(0.025,0.5,0.975)))\n\n# Estética\nx = data.frame(x)\nx$pars =  c(\"AIC1\",\"AIC2\",\"AIC3\",\"RMSE1\",\"RMSE2\",\"RMSE3\",\"MAE1\",\"MAE2\",\n                    \"MAE3\",\"MAPE1\",\"MAPE2\",\"MAPE3\")\ncolnames(x) = c(\"q2.5%\",\"Median\",\"q97.5%\",\"Criterio\")\n\nft = flextable(x[c(4,1,2,3)])\nautofit(ft)\n\n\n\n\nTable 3:  Criterios de información de los modelos. Mediante Validación cruzada. La tabla presenta los criterios AIC, RMSE, MAE y MAPE bajo un 10-fold cv. Criterioq2.5%Medianq97.5%AIC1127.61435963135.6849715137.0331468AIC2126.29037825134.1502897135.4172932AIC3122.65710678127.4735833136.4003434RMSE11.788751623.54788104.9388275RMSE21.760663023.48504534.5789438RMSE32.931323952.97685093.5564128MAE11.460718162.93408464.5759944MAE21.472694942.88830334.2660556MAE32.092836722.45999822.8921721MAPE10.093565650.14069210.2572092MAPE20.093868430.13867200.2406437MAPE30.095513710.14316510.1690392"
  },
  {
    "objectID": "posts/ABR/index.html",
    "href": "posts/ABR/index.html",
    "title": "Applied Bayesian Regression",
    "section": "",
    "text": "Este post presenta el contenido, direcciones y detalles de “Applied Bayesian Regression.”\nLa segunda parte del curso se impartirá regresión Bayesiana aplicada, el objetivo principal es que el estudiante pueda resolver un problema de regresión con un conjunto de datos reales mediante un ordenador, independiente del enfoque de inferencia a utilizar.\nEl material de la clase se encuentra en el repositorio Applied-Bayesian-Regression. Este presenta el contenido y cuadernos para la clase de Modelos lineales para la Maestría en Matemática, tercer periodo del año 2021.\nLa clase se imparte los Lunes, Martes y Jueves a las 17:00 horas (GMT -6), Para acceder al enlace zoom de la clase presione aquí."
  },
  {
    "objectID": "posts/ABR/index.html#contenido",
    "href": "posts/ABR/index.html#contenido",
    "title": "Applied Bayesian Regression",
    "section": "Contenido",
    "text": "Contenido\nEl contenido para el resto del curso es:\n\nRegresión aplicada\n\nVerosimilitud y función de enlace.\nL-BFGS algorithm.\nIntervalos de confianza, Jackniffe y Bootstrap.\nAnálisis de residuos, ANOVA y R^2 ajustado.\nselección del modelos (BIC, RMSE, MAPE, CV)\n\nRepaso de inferencia Bayesiana y Bayesian workflow\n\nPrior, likelihood, Posterior\nMCMC\nPredictive distribution\nPosterior predictive checks\nBayes factor, ELPD, LOO-CV.\n\nBayesian Regression\n\nBayesian GLMs, normal, Binomial, Poisson and Negative Binomial regressions\nRegularized priors (R2-D2, Horseshoe, Spike Lab)\nGaussian process regression."
  },
  {
    "objectID": "posts/ABR/index.html#material",
    "href": "posts/ABR/index.html#material",
    "title": "Applied Bayesian Regression",
    "section": "Material",
    "text": "Material\nEl material de la clase se extrae de 3 libros, varios artículos y diferentes paquetes de R y Python estos son libres y se encuentran en formato digital en la web.\n\nLibros\n\nBayes Rules! An Introduction to Applied Bayesian Modeling. Johnson, Ott and Dogucu, (2021).\nBeyond Multiple Linear Regression Applied Generalized Linear Models and Multilevel Models in R. Roback and Legler (2021).\nBayesian Modeling and Computation in Python. Martin, Kumar, and Lao (2021).\n\n\n\nArtículos principales\n\nBayesian Regression Using a Prior on the Model Fit: The R2-D2 shrinkage Prior. Zhang et al. (2022)\nHandling Sparsity via the Horseshoe. Carvalho, Polson, and Scott (2009)\nBayesian Variable Selection in Linear Regression. Mitchell and Beauchamp (1988)\n\n\n\nPaquetes\nLos lenguajes de programación a usar son R y Python.\n\n\nR core team\n\nProbabilistic Programming Language: Stan mc-stan.\npaquetes:\n\nrstanarm, paquete para ajustar modelos lineales.\nbayesplot, visualización de posterioris.\nloo seleccion de modelos.\n\n\n\n\nPython\n\nProbabilistic Programming Language: PyMC.\npaquetes:\n\nBambi, Ajustar modelos lineales.\nArviZ, visualización de datos y selección de modelos con LOO."
  },
  {
    "objectID": "posts/GLMs/index.html",
    "href": "posts/GLMs/index.html",
    "title": "Modelos Lineales Generalizados Aplicados",
    "section": "",
    "text": "Este post resume el workflow básico para realizar un análisis estadístico en un enfoque clásico.\nEl modelo lineal generalizado (GLM) relaciona de forma funcional un conjunto de variables aleatorias Z = (Y,X), donde la v.a. Y \\in \\mathbb{R} se le conoce como variable dependiente, y a la v.a. X \\in \\mathbb{R}^d son las covariables.\nSea Z = \\{Z_1,Z_2,\\ldots,Z_n\\} un conjunto de variables aleatorias independientes, tal que Z_i = (Y_i,X_i) \\in \\mathbb R^{d+1}, decimos que Z sigue un GLM si:\nY_i \\sim \\mathscr{F}_\\varepsilon (\\theta_i), \\quad \\text{y } g(\\theta_i) = \\beta X_i. Donde:"
  },
  {
    "objectID": "posts/GLMs/index.html#log-verosimilitud",
    "href": "posts/GLMs/index.html#log-verosimilitud",
    "title": "Modelos Lineales Generalizados Aplicados",
    "section": "Log-Verosimilitud",
    "text": "Log-Verosimilitud\nLos GLMs son modelos probabilistas, cuya función de probabilidad se establece mediante la verosimilitud en escala logarítmica. Dado el supuesto de independencia de los datos, la verosimilitud es simplemente el producto de las densidades marginales de los datos.\nL(y;\\theta) = f(y_1,y_2,\\ldots,y_n | \\theta) = \\prod_{i=1}^nf(y_i\\theta).\nDado que los GLM pertenecen a la familia exponencial, la verosimilitud se puede expresar de forma analítica como:\nL(y;\\theta) = \\prod_{i=1}^n \\exp \\left[y_i b(\\theta_i)+c(\\theta_i)+d(y_i) \\right].\nFinalmente, la log-verosimilitud que es el logaritmo de L, también posee forma analítica\nl(y;\\theta) = \\sum_{i=1}^n y_i b(\\theta_i) +\\sum_{i=1}^nc(\\theta_i) + \\sum_{i=1}^n d(y_i)."
  },
  {
    "objectID": "posts/GLMs/index.html#estimación-de-los-parámetros",
    "href": "posts/GLMs/index.html#estimación-de-los-parámetros",
    "title": "Modelos Lineales Generalizados Aplicados",
    "section": "Estimación de los parámetros",
    "text": "Estimación de los parámetros\nEl método de optimización más popular en GLMs es Máxima Verosimilitud que consiste en optimizar la log-verosimilitud, o simplemente resolver la función de score.\nU(y;\\theta) = \\frac{\\partial}{\\partial \\theta} l(y;\\theta) = 0. Generalmente resolver U implica resolver un sistema de ecuaciones no lineales, y al inicio el método mas utilizado es el algoritmo de Newton. En la actualidad dicho algoritmo a evolucionado a un Limited Memory Broyden–Fletcher–Goldfarb–Shanno algorithm. El algoritmo L-BFGS es un método de Newton que\n\nAproxima la matriz Jacobiana usando el método de Broyden, y\nAplica el algoritmo de Fletcher para corregir por estabilidad la aproximación de Broyden."
  },
  {
    "objectID": "posts/GLMs/index.html#incertidumbre-de-los-estimadores",
    "href": "posts/GLMs/index.html#incertidumbre-de-los-estimadores",
    "title": "Modelos Lineales Generalizados Aplicados",
    "section": "Incertidumbre de los estimadores",
    "text": "Incertidumbre de los estimadores\nUn estimador es cualquier estadístico w(y) que se utiliza para inferir información de \\beta. Dado que los estimadores \\hat \\beta = w(y) son transformaciones de la muestra. poseen una distribución1. En la mayoría de los caso la distribución muestral no tiene forma analítica, y esta se aproxima usando remuestreo.\nLos algoritmos de remuestreo más utilizados son\n\nJackniffe\nBootstrap\n\nDe los dos algoritmos el mas popular es el algoritmo de Bootstrap que consiste en generar una muestra de estimadores que aproxima la distribución muestral deseada. El algoritmo es:\n\nElegir el número de sub-muestras B\nPara b =1,2,3,\\ldots, B hacer:\n\nExtraer una sub-muestra Y_b con reemplazo de Y,\nEstimar los parámetros del modelo \\hat \\beta_b con la sub-muestra Y_b.\n\nLa colección \\hat \\beta_1,\\hat \\beta_2, \\hat \\beta_3 ,\\ldots,\\hat \\beta_B es una muestra de la distribución muestral de los estimadores \\hat \\beta.\nUsar \\hat \\beta_1,\\hat \\beta_2, \\hat \\beta_3 ,\\ldots,\\hat \\beta_B para aproximar los intervalos de confianza de \\hat \\beta.\n\nEl muestreo de Jackniffe es un caso particular del Bootstrap que consiste en extraer la sub-muestra Y_b eliminando la b-ésima observación y_b de la muestra original.\nPara análisis de incertidumbre de los estimadores, el Bootstrap provee mejores resultados que el método de Jackniffe, pero el segundo método tiene su nicho al comparar diferentes modelos, validación cruzada."
  },
  {
    "objectID": "posts/GLMs/index.html#análisis-de-los-residuos.",
    "href": "posts/GLMs/index.html#análisis-de-los-residuos.",
    "title": "Modelos Lineales Generalizados Aplicados",
    "section": "Análisis de los residuos.",
    "text": "Análisis de los residuos.\nLos residuos de un modelo se definen como la diferencia entre el valor ajustado por el modelo \\hat Y y su valor real Y.\nR_i = \\hat Y_i - Y_i.\nEn GLMs solo se revisan generalidades simples de los supuestos como:\n\nQue estén centrados en cero R_i \\approx 0.\nSean de varianza homogénea \\sigma_R\n\nEn modelos lineales generales, se pueden revisar más supuestos como normalidad, homogeneidad, y estacionaridad. En ML los residuos estiman los errores del modelo R_i = \\hat \\varepsilon_i.\nUn estadístico importante obtenido de los residuos, es el coeficiente de determinación R^2 que establece el porcentaje de varianza explicada por el modelo.\nR^2 = 1 - \\frac{\\sigma_R/(n-d-1)}{V[y]/(n-1)}"
  },
  {
    "objectID": "posts/GLMs/index.html#selección-de-modelos",
    "href": "posts/GLMs/index.html#selección-de-modelos",
    "title": "Modelos Lineales Generalizados Aplicados",
    "section": "Selección de modelos",
    "text": "Selección de modelos\nEn la práctica, es posible que se desarrollen múltiples modelos que expliquen el mismo conjunto de datos Z, existen indicadores que permiten describir las cualidades del modelo, los más utilizados son:\n\nlog-verosimilitud: \\log L= -l(y;\\theta).\nCriterio de Información de Bayes: BIC = 2 \\log L - 2\\log(n^d)\nCriterio de Información de Akaike AIC - 2 \\log L -2 d\nRoot Mean square error RMSE = \\frac{1}{\\sqrt n}||R||_2\nMean Absolute Percentaje Error MAPE =\\frac{1}{n}\\sum_{i=1}^n \\left| \\frac{R_i}{Y_i} \\right|\n\n\nSelección de variables\nUna aplicación de selección de modelos es encontrar modelos reducidos, Esto es encontrar un subconjunto de variables X_1 \\subset X tal que el modelo reducido M_r sea lo mas parsimonioso posible. Un modelo parsimonioso brinda mayor explicabilidad, mayor capacidad de aprendizaje y mayor capacidad de generalización.\nLos métodos para reducción de variables se les conoce como búsquedas, y los tipos son:\n\nBúsquedas hacia adelante\nBúsquedas hacia atrás.\n\nEn búsqueda hacia adelante se inicia con el modelo más pequeño posible, se mide su criterio de información, y luego se agregan variables de forma secuencial de tal forma que el criterio mejore."
  },
  {
    "objectID": "posts/GLMs/index.html#aprendizaje",
    "href": "posts/GLMs/index.html#aprendizaje",
    "title": "Modelos Lineales Generalizados Aplicados",
    "section": "Aprendizaje",
    "text": "Aprendizaje\nLos indicadores presentados miden el ajuste del modelo, esto es la capacidad del modelo de explicar el conjunto de datos. En aplicaciones mas recientes, la explicabilidad es una propiedad poco deseable, se prefiere medir la capacidad de aprendizaje.\n\n\n\n\n\n\nAprendizaje\n\n\n\nLa capacidad de aprendizaje es la habilidad del modelo de explicar propiedades externas a partir de la información adquirida.\n\n\nEn términos probabilistas, es la habilidad del modelo de predecir un nuevo conjunto de datos, a partir de los datos disponibles.\n\nParticiones\nEl aprendizaje se puede medir usando una partición de los datos. Sea Y = \\{Y_1,Y_2,\\ldots,Y_n\\} una muestra aleatoria, definimos una partición de entrenamiento y prueba como\nY = Y_E \\bigcup Y_P Donde:\n\nY_E \\bigcap Y_P = \\emptyset.\nm+k = n y m >> k.\nY_E = \\{Y_1,Y_2,\\ldots,Y_m\\} \\subset Y es el conjunto de entrenamiento.\nY_P = \\{Y_1,Y_2,\\ldots,Y_k\\} \\subset Y es el conjunto de prueba.\n\nEl algoritmo para medir aprendizaje es:\n\nAjustar los modelos M_1,M_2,\\ldots,M_f usando el conjunto de entrenamiento Y_E.\nPara cada modelo M_j hacer:\n\nRealizar k predicciones \\hat Y_{P,1},\\hat Y_{P,2},\\ldots,\\hat Y_{P,k}.\nComparar \\hat Y_{P} con Y_P usando AIC, BIC log-lik, RMSE o MAPE.\n\nEl modelo con mayor aprendizaje es el modelo con criterio menor.\n\nLa mayor limitante de las particiones es que al ser aleatorias los resultados varian bastante según la selección de las observaciones en el conjunto de entrenamiento. Una forma de evitar esos problemas es usando Validación cruzada."
  },
  {
    "objectID": "posts/GLMs/index.html#validación-cruzada",
    "href": "posts/GLMs/index.html#validación-cruzada",
    "title": "Modelos Lineales Generalizados Aplicados",
    "section": "Validación cruzada",
    "text": "Validación cruzada\nValidación Cruzada consiste en realizar el proceso de partición muchas veces, el método mas utilizados es k-fold cross-validation este consisten en:\n\nDefinir m como el número de iteraciones a realizar\nPara i = 1,2,3,\\ldots, m hacer:\n\ndefinir el conjunto de prueba Y_p de tamaño k.\ndefinir el conjunto de entrenamiento Y_E como el complemento Y_E = Y_P^c.\nEstimar los modelos con Y_E\nComparar las predicciones de cada modelo con Y_P mediante algún criterio de información.\n\nPromediar los criterios obtenidos de cada iteración.\nElegir el modelo con criterio promedio menor.\n\nCuando el conjunto e prueba solo posee una observación, al método se le conoce como LOO (Leave one out cross validation). Otro método es utilizar un Bootstrap pero es altamente costoso.\n\nNotar que:\n\nLOO es equivalente a un muestreo de Jackniffe.\nCon validación cruzada re-utilizamos la información\nUsamos toda la muestra para validar los resultados.\nSe minimiza la variación de errores de aprendizaje."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Applied Bayesian Modeling",
    "section": "",
    "text": "Capacidad de Motores de carros\n\n\n\n\nGaussian\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nNov 15, 2022\n\n\nAsael Alonzo Matamoros\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nRegression\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nNov 14, 2022\n\n\nAsael Alonzo Matamoros.\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nnews\n\n\nintroduction\n\n\nBaseline\n\n\n\n\n\n\n\n\n\n\n\nNov 13, 2022\n\n\nAsael Alonzo Matamoros\n\n\n\n\n\n\nNo matching items"
  }
]